# RISC-V tinkering with Bluespec

I like RISC-V! I also like HDLs that are more productive than Verilog!

The "official" RISC-V implementations in Bluespec are ... very elaborate and
difficult to understand. So, in a quest for better understanding, I've written
my own.

This is currently intended as an experiment and educational resource, and I make
no arguments about this being the bestest RISC-V ever (or even that it is
correct).

# Sizes and stats

This is mostly for my reference, when I return to this project later wondering
about the results. Numbers may be out of date.

| Core | System | Target | # LCs | fmax (MHz) | MIPS |
| :--- | :----- | :----- | ----: | ---------: | ---: |
| Dinky5 | Dinky5Soc | hx1k | 791 | 60.64 | ~20 |
| Tangy5 | Tangy5Soc | hx1k | 944 | 54.59 | ~27 |

# License / copyright

Except where noted the contents of this repository are Copyright (C) 2021 Cliff
L. Biffle, and are licensed under the terms of the Mozilla Public License 2.0
(see the LICENSE file).

Anything else is marked in the file header.
